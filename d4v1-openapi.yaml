---
openapi: 3.0.2
info:
  title: Hashdragons
  description: WORK IN PROGRESS - Proposed standard REST API for Hashdragons
  contact:
    url: https://github.com/hashdragons/hashdragons.io
  license:
    name: MIT
    url: https://github.com/hashdragons/hashdragons.io/blob/master/LICENSE
  version: 1.0.0
externalDocs:
  description: Find out more about Hashdragons
  url: https://hashdragons.io
servers:
- url: http://localhost:8080/d4/api/v1
  description: Development server
tags:
- name: system
  description: About this API server
- name: hashdragon
  description: About Hashdragons
  externalDocs:
    description: GitHub Repo
    url: https://github.com/hashdragons/hashdragons.io/blob/master/hashdragons1.md
- name: event
  description: The BCH blockchain protocol for Hashdragon events
  externalDocs:
    url: https://github.com/hashdragons/hashdragons.io/blob/master/protocol.md
paths:
  /system/status:
    get:
      tags:
      - system
      summary: Get current status of the server
      description: View status of the local dragonset and service provider
      operationId: getSystemStatus
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
        "501":
          description: Not Implemented
      security:
      - api_key: []
  /hashdragon/info/{hashdragon}:
    get:
      tags:
      - hashdragon
      summary: General information about this hashdragon
      description: General information about the Hashdragon, including its provenance an current activity
      operationId: getHashdragonInfo
      parameters:
      - name: hashdragon
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Hashdragon'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashdragonInfo'
        "400":
          description: Invalid Input
        "501":
          description: Not Implemented
      security:
      - api_key: []
  /hashdragon/describe/{hashdragon}:
    get:
      tags:
      - hashdragon
      summary: Explore the virtues and other attributes of a Hashdragon
      operationId: getHashdragonAttributes
      parameters:
      - name: hashdragon
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Hashdragon'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashdragonAttributes'
        "400":
          description: Invalid input
        "501":
          description: Not Implemented
      security:
      - api_key: []
  /hashdragon/address/{hashdragon}:
    get:
      tags:
      - hashdragon
      summary: Get the BCH address for a Hashdragon
      operationId: getHashdragonAddress
      parameters:
      - name: hashdragon
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Hashdragon'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: A custom BCH address
        "501":
          description: Not Implemented
      security:
      - api_key: []
  /hashdragon/lifeline/{hashdragon}:
    get:
      tags:
      - hashdragon
      summary: Get the BCH address for a Hashdragon
      operationId: getHashdragonLifeline
      parameters:
      - name: hashdragon
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Hashdragon'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashdragonLifeline'
        "501":
          description: Not Implemented
      security:
      - api_key: []
  /hashdragon/qr/{hashdragon}:
    get:
      tags:
      - hashdragon
      summary: Get the BCH address for a Hashdragon
      operationId: hashdragonQR
      parameters:
      - name: hashdragon
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Hashdragon'
      responses:
        "200":
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid Input
        "501":
          description: Not Implemented
      security:
      - api_key: []
  /hashdragon/song/{hashdragon}:
    get:
      tags:
      - hashdragon
      summary: Get a MIDI file for a Hashdragon song
      operationId: hashdragonSong
      parameters:
      - name: hashdragon
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Hashdragon'
      - name: format
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - arc
          - chant
          - quartet
      responses:
        "200":
          description: OK
          content:
            audio/midi:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid Input
        "501":
          description: Not Implemented
      security:
      - api_key: []
  /event/create:
    post:
      tags:
      - event
      summary: Create an Event transaction to sign
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTemplate'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventToSign'
        "400":
          description: Invalid input
        "501":
          description: Not Implemented
      security:
      - api_key: []
  /event/send:
    post:
      tags:
      - event
      summary: Send the event to the BCH blockchain
      operationId: sendEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionTemplate'
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetail'
        "400":
          description: Invalid input
        "501":
          description: Not Implemented
      security:
      - api_key: []
components:
  schemas:
    Protocol:
      pattern: /^[dD]101[dD]400$/gm
      type: string
      description: Lokad ID for Hashdragons protocol
    Hashdragon:
      pattern: /^[dD]4[0-9a-fA-F]{62}$/gm
      type: string
      description: A 32 byte sequence starting with the byte 0xD4
    Hash256:
      pattern: /^[0-9a-fA-F]{64}$/gm
      type: string
    PublicKey:
      pattern: /^0[23][0-9a-fA-F]{64}$|^04[0-9a-fA-F]{128}$/gm
      type: string
    Signature:
      pattern: /^[0-9a-fA-F]+$/gm
      type: string
    Address:
      pattern: /^bitcoincash:?q[0-9a-zA-Z]{41}$/gm
      type: string
    Byte:
      maximum: 255
      minimum: 0
      type: integer
    Flags16:
      maxItems: 16
      minItems: 16
      type: array
      items:
        maximum: 1
        minimum: 0
        type: integer
    Flags24:
      maxItems: 24
      minItems: 24
      type: array
      items:
        maximum: 1
        minimum: 0
        type: integer
    EventType:
      type: string
      enum:
      - hatch
      - wander
      - hibernate
      - trapped
      - rescue
      - breed
      - trade
      - fight
    SystemStatus:
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/Protocol'
        utc:
          type: integer
        uptime:
          type: string
          format: date-time
        relay:
          type: integer
        height:
          type: integer
        dragonset:
          $ref: '#/components/schemas/DragonsetStatus'
        email:
          type: string
          format: email
        donate:
          type: string
          description: BCH Address for voluntary donations to this service provider
        message:
          type: string
    DragonsetStatus:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/Hash256'
        commitment:
          $ref: '#/components/schemas/Hash256'
    HashdragonInfo:
      type: object
      properties:
        hashdragon:
          $ref: '#/components/schemas/Hashdragon'
        provenance:
          $ref: '#/components/schemas/HashdragonProvenanceInfo'
        activity:
          $ref: '#/components/schemas/HashdragonActivityInfo'
        location:
          $ref: '#/components/schemas/HashdragonLocationInfo'
    HashdragonProvenanceInfo:
      type: object
      properties:
        type:
          type: string
          enum:
          - original
          - spawn
          - unborn
    HashdragonActivityInfo:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/EventType'
        timestamp:
          type: string
          format: date-time
        keeper:
          $ref: '#/components/schemas/Address'
    HashdragonLocationInfo:
      type: object
      properties:
        block:
          type: integer
        tx:
          $ref: '#/components/schemas/Hash256'
        op_return:
          type: array
          items:
            type: string
    HashdragonAttributes:
      type: object
      properties:
        hashdragon:
          $ref: '#/components/schemas/Hashdragon'
        description:
          type: string
          description: A short description describing the prominent virtues of the Hashdragon
        strength:
          maximum: 256
          minimum: 0
          type: integer
        identity:
          $ref: '#/components/schemas/Flags16'
        inner_light:
          $ref: '#/components/schemas/Byte'
        color:
          type: string
          format: rgb
        colorname:
          type: string
        presence:
          $ref: '#/components/schemas/Byte'
        strangeness:
          $ref: '#/components/schemas/Byte'
        charm:
          $ref: '#/components/schemas/Byte'
        beauty:
          $ref: '#/components/schemas/Byte'
        truth:
          $ref: '#/components/schemas/Byte'
        magic:
          $ref: '#/components/schemas/Byte'
        powers:
          $ref: '#/components/schemas/Flags24'
        karma:
          type: integer
          format: int32
        arcana:
          type: integer
          format: int32
        cabala:
          type: integer
          format: int32
        maturity:
          type: string
          format: date-time
        sigil:
          maxItems: 2
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/Byte'
        next_premonition:
          type: string
          format: date-time
    HashdragonLifeline:
      type: array
      items:
        $ref: '#/components/schemas/HashdragonLifelineEvent'
    HashdragonLifelineEvent:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        event:
          $ref: '#/components/schemas/EventType'
        txid:
          $ref: '#/components/schemas/Hash256'
    EventTemplate:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/EventType'
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/EventInputTemplate'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/EventOutputTemplate'
    EventInputTemplate:
      type: object
      properties:
        txid:
          $ref: '#/components/schemas/Hash256'
        index:
          type: integer
    EventOutputTemplate:
      type: object
      properties:
        target:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        value:
          type: integer
    EventToSign:
      type: object
      properties:
        raw:
          type: string
          format: hex
        sign:
          type: array
          items:
            $ref: '#/components/schemas/EventHashesToSign'
    EventHashesToSign:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/Hash256'
        address:
          $ref: '#/components/schemas/Address'
    TransactionTemplate:
      type: object
      properties:
        raw:
          type: string
          format: hex
        sig_script:
          type: array
          items:
            $ref: '#/components/schemas/TransactionSigScriptTemplate'
    TransactionSigScriptTemplate:
      type: object
      properties:
        public_key:
          $ref: '#/components/schemas/PublicKey'
        signature:
          $ref: '#/components/schemas/Signature'
    TransactionDetail:
      type: object
      properties:
        txid:
          $ref: '#/components/schemas/Hash256'
        raw:
          type: string
          format: hex
  securitySchemes:
    api_key:
      type: apiKey
      name: JWT
      in: header
